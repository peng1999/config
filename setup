#!/usr/bin/env fish

set cmds vimrc vim_plug vim_plugin \
         nvim_init nvim_plug nvim_plugin \
         oh_my_zsh zshrc \
         config.fish fisherman tide_config \
         git_config \
         tmux spacemacs

if status --is-interactive
    complete -x -c setup -a "$cmds"
    exit
end

function check
    echo $argv
    eval $argv
    set s $status
    if not test $s = 0
        echo (set_color red)command not return 0, exit...(set_color normal)
        exit $s
    end
end

function test_not_exist -a dir
    if test ! -e $dir
        return 0
    else
        echo -n (set_color -o)"Warning: "(set_color normal)
        echo `$dir` exists, I will not touch it, and the script may not execute currectly.
        return 1
    end
end

function ensure_dir -a dir
    test_not_exist $dir
    and check mkdir -p $dir
end

function try_link -a src dist
    test_not_exist $dist; or return

    ensure_dir (dirname $dist)
    check ln -rs $src $dist
end

function vimrc
    ensure_dir ~/tmp/vimundo
    ensure_dir ~/tmp/vimbackup
    try_link $PWD/vimrc/vimrc ~/.vim/vimrc
end

function nvim_init
    ensure_dir ~/.local/share/nvim/undo
    echo -n "run "
    set_color -o
    echo -n "git submodule update --remote"
    set_color normal
    echo " to acquire latest vim init file"
    try_link $PWD/vimrc/vimrc ~/.config/nvim/init.vim
end

function vim_plug
    set path ~/.vim/autoload/plug.vim
    test_not_exist $path; or return
    check curl -fLo $path --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
end

function vim_plugin
    vimrc
    vim_plug
    try_link $PWD/vimrc/plugin.vim ~/.vim/plugin.vim
    # echo Install Vim plugins...
    check 'vim -c \'execute "PlugInstall" | qa\''
end

function nvim_plug
    set path ~/.local/share/nvim/site/autoload/plug.vim
    test_not_exist $path; or return
    check curl -fLo $path --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
end

function nvim_plugin
    nvim_init
    nvim_plug
    set path ~/.config/nvim/layers
    ensure_dir $path
    for file in $PWD/vimrc/layers/*
        try_link $file $path/(basename $file)
    end
    set_color -o yellow
    echo Please delete unneeded layers in ~/.config/nvim/layers
    echo At least delete one of coc.vim or languageclient.vim
    echo and run :PlugInstall in nvim.
    set_color normal
end

function oh_my_zsh
    set zpath ~/.antigen
    ensure_dir $zpath/antigen
    check git clone https://github.com/zsh-users/antigen.git $zpath/antigen/
end

function zshrc
    oh_my_zsh
    check ln -rs $PWD/zshrc ~/.zshrc
end

function config.fish
    try_link $PWD/config.fish ~/.config/fish/config.fish
end

function fisherman
    config.fish
    if type -q fisher
        echo command fisher exists, skiped
    else
        echo getting fisherman...
        curl -sL https://git.io/fisher | source && fisher install jorgebucaran/fisher
    end
end

function tide_config
    if not type -q tide
        echo (set_color red)tide not exists! exit...(set_color normal)
        exit 1
    end
    for name in tide_pwd_truncate_margin
        if not set -q -U $name
            echo (set_color red)variable \$$name not exists! exit...(set_color normal)
            exit 1
        end
    end
    set --universal tide_pwd_truncate_margin 50
end

function git_config
    git config --global credential.helper cache
end

function tmux
    set path ~/.tmux/plugins/tpm
    test_not_exist $path; and check git clone https://github.com/tmux-plugins/tpm $path
    check ln -rs $PWD/tmux/theme.conf ~/.tmux/theme.conf
    check ln -rs $PWD/tmux.conf ~/.tmux.conf
end

function spacemacs
    set path ~/.emacs.d
    set url https://github.com/syl20bnr/spacemacs
    test_not_exist $path; and check git clone --branch develop $url $path
    try_link $PWD/emacs.d/spacemacs ~/.spacemacs
    emacs
end

for cmd in $argv
    if contains $cmd $cmds
        $cmd
    else
        echo "Command $cmd doesn't exist"
        exit 1
    end
end
